@model BlindRiver.Models.sliderimage

@{
    ViewBag.Title = "ImageEdit";
}

<h2>Edit Content Image</h2>

<div id="edit-image-admin">

    @using (Html.BeginForm("ImageEdit", "SliderAdmin", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.HiddenFor(x => x.ImagePath)
        <img alt="hospital"src="@Url.Content(@"~/Content/Images/" + (@Html.DisplayFor(x => x.ImagePath)))" />
        <br />
        
        <input type="file" name="ImagePath" class="form-input" />
        <br />
        
        @Html.LabelFor(x => x.Title, new { @class = "label" })
        @Html.TextBoxFor(x => x.Title, new { @class = "form-input" })
        @Html.ValidationMessageFor(x => x.Title, "This field is required.")
        <br />

        @Html.LabelFor(x => x.Description, new { @class = "label" })
        @Html.TextAreaFor(x => x.Description, new { @class = "form-input" })
        @Html.ValidationMessageFor(x => x.Description, "This field is required.")
        <br />

        @Html.LabelFor(x => x.Link, new { @class = "label" })
        List<SelectListItem> urlList = new List<SelectListItem>();
        foreach (var item in ViewBag.mainmenulink)
        {
            urlList.Add(new SelectListItem
            {
                Text = item.link_url,
                Value = Convert.ToString(item.link_url)
            });
        }

        @Html.DropDownListFor(x => x.Link, urlList)
        <br />
        <br />
        <div class="f-left">
        <input type="submit" value="Save changes" class="button-blue" />
        </div>
    }

    @using (Html.BeginForm("Index", "SliderAdmin"))
    {
        <div>
            <button type="submit" class="button-cancel">Cancel</button>
        </div>
    }
</div>